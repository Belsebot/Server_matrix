import asyncio
import datetime
import time
import socket

from nio import AsyncClient,SyncResponse,MatrixRoom,RoomMessageText

username="matrix user"
password="matrix password"
host="https://matrix.org"
room="matrix room:matrix.org"


async def send_message(asiakas,text):

	await asiakas.room_send(
		room_id=room,
		message_type="m.room.message",
		content={"msgtype": "m.text", "body": text},
	)

async def palvelin(ss):

	connection,address=ss.accept()
	buffer = connection.recv(1024)
	buf=buffer.decode("utf-8")

	return (buf,address)

async def kello_f():

	nyt=datetime.datetime.now()
	kello=nyt.strftime("%H:%M")

	return(kello)

async def paiva_f():

	nyt=datetime.datetime.now()

	return(nyt)

async def main():

	client = AsyncClient(host,username)

	response = await client.login(password)
	print (response)

	ssocket = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
	ssocket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR,1)
	ssocket.bind(('192.168.0.100', 10000))
	ssocket.listen(5)

	log = open('lampotila.log','a')
	log2 = open('muut_tapahtumat.log','a')
	etsi='therm'

	now=await paiva_f()
	paiva=now.strftime("%d")

	log.write(now.strftime("%d-%m-%Y %H:%M"))
	log.write(' uusi serveri kaynnistettiin\n')
	log.flush()

	log2.write(now.strftime("%d-%m-%Y %H:%M"))
	log2.write(' uusi serveri kaynnistettiin\n')
	log2.flush()

	await send_message(client,"Uusi Serveri kaynnistyi")

	try:

		print ("Waiting connection")
		while True:

			buf,address=await palvelin(ssocket)

			if len(buf) > 0:
				now=await paiva_f()

				if paiva != now.strftime("%d"):
					print("---Paiva:",now.strftime("%d-%m"),"---")
					log.write(now.strftime("%d-%m-%Y"))
					log.write('\n')
					paiva=now.strftime("%d")
					log.flush()

				if etsi in buf:
					arvo,kello,deg_in,max_in,min_in,deg_out,max_out,min_out=buf.split()
					local_kello=await kello_f()
					print("Local Kello:",local_kello,"Kello:",kello,"Sisalampo:",deg_in,"Max:",max_in,"Min:",min_in)
					print("Ulkolampotila:",deg_out,"Max:",max_out,"Min:",min_out)
					temp_matrix="Kello:%s Sisalampo:%s Ulkolampo:%s" % (kello,deg_in,deg_out)
					await send_message(client,temp_matrix)
					log.write(buf)
					log.write('\n')
					log.flush()
			else:
				print ("Connected by:",address[0],buf)
				await send_message(client,buf)
				log2.write(buf)
				log2.write('\n')
				log2.flush()



	except KeyboardInterrupt:
		now=await paiva_f()

		log.write(now.strftime("%d-%m-%Y %H:%M"))
		log.write(' uusi serveri sammutettiin\n')

		log2.write(now.strftime("%d-%m-%Y %H:%M"))
		log2.write(' uusi serveri sammutettiin\n')

		print("Serveri sammutettiin")
		ssocket.close()

	log.close()
	log2.close()



asyncio.run(main())
